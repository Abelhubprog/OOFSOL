import React, { useState, useEffect } from 'react';
import { 
  Clock, Timer, Trophy, Camera, Share2, Sparkles,
  Heart, MessageCircle, Download, Rocket, Star 
} from 'lucide-react';

const OOFTimeCapsule = () => {
  const [capsules, setCapsules] = useState([]);
  const [selectedCapsule, setSelectedCapsule] = useState(null);
  const [isCreating, setIsCreating] = useState(false);

  // Sample capsule templates
  const capsuleTemplates = [
    {
      id: 'fomo-king',
      title: "Peak FOMO Achievement Unlocked! 🏆",
      description: "Bought the absolute top of 3 memecoins in one day",
      timestamp: "2024-03-20",
      mood: "pain",
      missedGains: "$50,000",
      tags: ["#FOMO", "#BuyHighSellLow", "#ProfessionalDegen"],
      mediaType: "meme",
      memeTemplate: "clown-makeup",
      reactions: {
        laughs: 420,
        oofs: 69,
        shares: 42
      }
    },
    {
      id: 'paper-hands',
      title: "Paper Hands Hall of Fame 🧻",
      description: "Sold BONK one day before 100x pump",
      timestamp: "2024-01-05",
      mood: "regret",
      missedGains: "$150,000",
      tags: ["#PaperHands", "#CouldaWouldaShoulda", "#BONKregrets"],
      mediaType: "chart",
      chartHighlight: "exit-point",
      reactions: {
        laughs: 777,
        oofs: 123,
        shares: 89
      }
    }
  ];

  // Create new time capsule
  const createCapsule = () => {
    setIsCreating(true);
  };

  // Capsule Card Component
  const CapsuleCard = ({ capsule }) => (
    <div className="bg-white rounded-xl shadow-lg overflow-hidden">
      <div className={`p-6 ${
        capsule.mood === 'pain' 
          ? 'bg-gradient-to-br from-red-400 to-red-600' 
          : 'bg-gradient-to-br from-purple-400 to-purple-600'
      } text-white`}>
        <div className="flex justify-between items-start mb-4">
          <h3 className="text-xl font-bold">{capsule.title}</h3>
          <span className="bg-black bg-opacity-20 px-3 py-1 rounded-full text-sm">
            {new Date(capsule.timestamp).toLocaleDateString()}
          </span>
        </div>
        
        <p className="text-lg mb-4">{capsule.description}</p>

        <div className="bg-white bg-opacity-20 p-4 rounded-lg mb-4">
          <div className="text-sm opacity-75">Missed Gains</div>
          <div className="text-2xl font-bold">{capsule.missedGains}</div>
        </div>

        <div className="flex flex-wrap gap-2">
          {capsule.tags.map(tag => (
            <span key={tag} className="bg-white bg-opacity-20 px-3 py-1 rounded-full text-sm">
              {tag}
            </span>
          ))}
        </div>
      </div>

      <div className="p-4">
        <div className="flex justify-between items-center">
          <div className="flex space-x-4">
            <button className="flex items-center space-x-2 text-purple-600">
              <Heart size={18} />
              <span>{capsule.reactions.oofs}</span>
            </button>
            <button className="flex items-center space-x-2 text-purple-600">
              <MessageCircle size={18} />
              <span>{capsule.reactions.laughs}</span>
            </button>
          </div>
          <button 
            onClick={() => setSelectedCapsule(capsule)}
            className="bg-purple-600 text-white px-4 py-2 rounded-lg
                     hover:bg-purple-700 transition-colors flex items-center space-x-2"
          >
            <Share2 size={18} />
            <span>Share Memory</span>
          </button>
        </div>
      </div>
    </div>
  );

  // Capsule Creator Modal
  const CapsuleCreator = ({ onClose }) => (
    <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50">
      <div className="bg-white rounded-xl p-8 max-w-2xl w-full">
        <h2 className="text-2xl font-bold text-purple-900 mb-6">
          Create New OOF Memory
        </h2>

        <div className="space-y-6">
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Title Your Pain 😅
            </label>
            <input 
              type="text"
              placeholder="Give your OOF moment a catchy title..."
              className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-purple-500"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Tell Your Story
            </label>
            <textarea
              rows={4}
              placeholder="What happened? Let it all out..."
              className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-purple-500"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Missed Gains Calculator
            </label>
            <div className="flex space-x-4">
              <input
                type="number"
                placeholder="Amount"
                className="flex-1 p-3 border rounded-lg focus:ring-2 focus:ring-purple-500"
              />
              <input
                type="number"
                placeholder="Peak Price"
                className="flex-1 p-3 border rounded-lg focus:ring-2 focus:ring-purple-500"
              />
            </div>
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              Select Meme Template
            </label>
            <div className="grid grid-cols-3 gap-4">
              {['clown', 'wojak', 'pepe'].map(template => (
                <div 
                  key={template}
                  className="aspect-square bg-purple-100 rounded-lg 
                           flex items-center justify-center cursor-pointer
                           hover:bg-purple-200 transition-colors"
                >
                  {template}
                </div>
              ))}
            </div>
          </div>

          <div className="flex justify-end space-x-4">
            <button 
              onClick={onClose}
              className="px-4 py-2 text-purple-600"
            >
              Cancel
            </button>
            <button className="bg-purple-600 text-white px-6 py-2 rounded-lg
                           hover:bg-purple-700 transition-colors flex items-center space-x-2">
              <Star size={20} />
              <span>Create Memory</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  );

  return (
    <div className="max-w-6xl mx-auto p-6">
      {/* Header */}
      <div className="text-center mb-12">
        <h1 className="text-4xl font-bold text-purple-900 mb-2">
          OOF Time Capsule
        </h1>
        <p className="text-purple-600">
          Immortalize Your Greatest Trading OOFs! 📸
        </p>
      </div>

      {/* Create Button */}
      <div className="mb-8 text-center">
        <button
          onClick={createCapsule}
          className="bg-gradient-to-r from-purple-500 to-purple-700
                   text-white px-8 py-4 rounded-xl font-bold
                   hover:from-purple-600 hover:to-purple-800
                   transform hover:scale-105 transition-all
                   flex items-center space-x-2 mx-auto"
        >
          <Camera size={24} />
          <span>Capture New OOF Moment</span>
        </button>
      </div>

      {/* Capsules Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        {capsuleTemplates.map(capsule => (
          <CapsuleCard key={capsule.id} capsule={capsule} />
        ))}
      </div>

      {/* Create Modal */}
      {isCreating && (
        <CapsuleCreator onClose={() => setIsCreating(false)} />
      )}

      {/* Share Modal */}
      {selectedCapsule && (
        <div className="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50">
          <div className="bg-white rounded-xl p-8 max-w-2xl w-full">
            <div className={`${
              selectedCapsule.mood === 'pain' 
                ? 'bg-gradient-to-br from-red-400 to-red-600' 
                : 'bg-gradient-to-br from-purple-400 to-purple-600'
            } p-8 rounded-lg text-white mb-6`}>
              <h3 className="text-2xl font-bold mb-4">{selectedCapsule.title}</h3>
              <p className="text-lg mb-4">{selectedCapsule.description}</p>
              <div className="bg-white bg-opacity-20 p-4 rounded-lg">
                <div className="text-sm opacity-75">Missed Gains</div>
                <div className="text-2xl font-bold">{selectedCapsule.missedGains}</div>
              </div>
            </div>

            <div className="flex justify-end space-x-4">
              <button 
                onClick={() => setSelectedCapsule(null)}
                className="px-4 py-2 text-purple-600"
              >
                Close
              </button>
              <button className="bg-blue-500 text-white px-6 py-2 rounded-lg
                             hover:bg-blue-600 transition-colors flex items-center space-x-2">
                <Share2 size={20} />
                <span>Share on X</span>
              </button>
              <button className="bg-purple-600 text-white px-6 py-2 rounded-lg
                             hover:bg-purple-700 transition-colors flex items-center space-x-2">
                <Download size={20} />
                <span>Save Image</span>
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default OOFTimeCapsule;