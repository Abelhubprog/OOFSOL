import React, { useState, useEffect } from 'react';
import {
  ArrowUpCircle, ArrowDownCircle, Star, Crown,
  Clock, Wallet, Check, AlertCircle
} from 'lucide-react';

const OOFPlatform = () => {
  // Platform States
  const [activeTab, setActiveTab] = useState('profiles'); // profiles, submit, admin
  const [walletConnected, setWalletConnected] = useState(false);
  const [walletData, setWalletData] = useState({
    solBalance: 0,
    oofBalance: 0,
    stakedOof: 0
  });

  // Market Data State
  const [marketData, setMarketData] = useState({
    oofPrice: 0.0045,
    priceChange: '+12.5%',
    marketCap: '4.5M',
    volume24h: '850K',
    solPrice: 0
  });

  // Profile Submission Form
  const ProfileSubmissionForm = () => {
    const [formData, setFormData] = useState({
      name: '',
      handle: '',
      avatar: '',
      type: 'community',
      achievements: [],
      specialties: []
    });

    const handleSubmit = async (e) => {
      e.preventDefault();
      // Submit profile for approval
    };

    return (
      <div className="bg-white rounded-xl shadow-lg p-6">
        <h2 className="text-2xl font-bold text-purple-900 mb-6">
          Submit Your Profile
        </h2>

        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="grid grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Name
              </label>
              <input
                type="text"
                className="w-full p-3 border rounded-lg focus:ring-2 
                         focus:ring-purple-500 outline-none"
                value={formData.name}
                onChange={(e) => setFormData({...formData, name: e.target.value})}
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Handle
              </label>
              <input
                type="text"
                className="w-full p-3 border rounded-lg focus:ring-2 
                         focus:ring-purple-500 outline-none"
                value={formData.handle}
                onChange={(e) => setFormData({...formData, handle: e.target.value})}
              />
            </div>
          </div>

          {/* Add more form fields here */}

          <button
            type="submit"
            className="w-full bg-purple-600 text-white py-3 rounded-lg
                     hover:bg-purple-700 transition-colors"
          >
            Submit for Review
          </button>
        </form>
      </div>
    );
  };

  // Trading Hub Component
  const TradingHub = () => {
    const [amount, setAmount] = useState('');
    const [tradeType, setTradeType] = useState('buy');

    return (
      <div className="bg-white rounded-xl shadow-lg p-6">
        <h2 className="text-2xl font-bold text-purple-900 mb-6">
          $OOF Trading Hub
        </h2>

        <div className="grid grid-cols-3 gap-6 mb-8">
          <div className="bg-purple-50 rounded-lg p-4">
            <div className="text-sm text-purple-600">Price</div>
            <div className="text-2xl font-bold text-purple-900">
              ${marketData.oofPrice}
            </div>
            <div className="text-green-500 text-sm">{marketData.priceChange}</div>
          </div>
          <div className="bg-purple-50 rounded-lg p-4">
            <div className="text-sm text-purple-600">Market Cap</div>
            <div className="text-2xl font-bold text-purple-900">
              ${marketData.marketCap}
            </div>
          </div>
          <div className="bg-purple-50 rounded-lg p-4">
            <div className="text-sm text-purple-600">24h Volume</div>
            <div className="text-2xl font-bold text-purple-900">
              ${marketData.volume24h}
            </div>
          </div>
        </div>

        <div className="grid grid-cols-2 gap-6">
          {/* Trading Interface */}
          <div className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Amount (SOL)
              </label>
              <input
                type="number"
                value={amount}
                onChange={(e) => setAmount(e.target.value)}
                placeholder="0.0"
                className="w-full p-3 border rounded-lg focus:ring-2 
                         focus:ring-purple-500 outline-none"
              />
            </div>
            <div className="grid grid-cols-2 gap-4">
              <button
                onClick={() => setTradeType('buy')}
                className="bg-green-600 text-white px-4 py-3 rounded-lg
                         hover:bg-green-700 transition-colors flex items-center
                         justify-center space-x-2"
              >
                <ArrowUpCircle size={20} />
                <span>Buy $OOF</span>
              </button>
              <button
                onClick={() => setTradeType('sell')}
                className="bg-red-600 text-white px-4 py-3 rounded-lg
                         hover:bg-red-700 transition-colors flex items-center
                         justify-center space-x-2"
              >
                <ArrowDownCircle size={20} />
                <span>Sell $OOF</span>
              </button>
            </div>
          </div>

          {/* Staking Interface */}
          <div className="bg-purple-50 rounded-lg p-4">
            <h3 className="font-bold text-purple-900 mb-4">$OOF Staking</h3>
            <div className="space-y-4">
              <div className="flex justify-between items-center">
                <span className="text-purple-600">APY</span>
                <span className="text-purple-900 font-bold">25%</span>
              </div>
              <div className="flex justify-between items-center">
                <span className="text-purple-600">Lock Period</span>
                <span className="text-purple-900 font-bold">7 days</span>
              </div>
              <button className="w-full bg-purple-600 text-white px-4 py-2
                             rounded-lg hover:bg-purple-700 transition-colors">
                Stake $OOF
              </button>
            </div>
          </div>
        </div>
      </div>
    );
  };

  // Profile Card Component
  const ProfileCard = ({ profile }) => {
    const {
      name, handle, avatar, type, stats, specialties, achievements,
      oofBalance, stakingRewards, level, background
    } = profile;

    return (
      <div className={`${background} rounded-2xl p-1 transform 
                    hover:scale-105 transition-all duration-300`}>
        <div className="bg-black bg-opacity-30 rounded-xl p-6 backdrop-blur-sm">
          {/* Header */}
          <div className="flex justify-between items-start mb-6">
            <div className="flex items-center space-x-4">
              <div className="text-5xl">{avatar}</div>
              <div>
                <div className="flex items-center space-x-2">
                  <h3 className="text-white text-xl font-bold">{name}</h3>
                  {type === 'exclusive' && (
                    <span className="bg-yellow-400 text-yellow-900 text-xs 
                                 px-2 py-1 rounded-full">
                      EXCLUSIVE
                    </span>
                  )}
                </div>
                <p className="text-white text-opacity-80">{handle}</p>
              </div>
            </div>
            <div className="flex items-center space-x-2">
              <Star className="text-yellow-400" />
              <span className="text-white">Lvl {level}</span>
            </div>
          </div>

          {/* Stats Grid */}
          <div className="grid grid-cols-3 gap-4 mb-6">
            <div className="bg-white bg-opacity-10 rounded-lg p-3">
              <div className="text-white text-opacity-70 text-sm">Influence</div>
              <div className="text-white text-xl font-bold">{stats.influence}</div>
            </div>
            <div className="bg-white bg-opacity-10 rounded-lg p-3">
              <div className="text-white text-opacity-70 text-sm">Followers</div>
              <div className="text-white text-xl font-bold">{stats.followers}</div>
            </div>
            <div className="bg-white bg-opacity-10 rounded-lg p-3">
              <div className="text-white text-opacity-70 text-sm">Gems Found</div>
              <div className="text-white text-xl font-bold">{stats.gemsFound}</div>
            </div>
          </div>

          {/* Specialties */}
          <div className="mb-6">
            <div className="flex flex-wrap gap-2">
              {specialties.map((specialty, index) => (
                <div key={index} 
                     className="bg-white bg-opacity-10 px-3 py-1 
                              rounded-full text-white text-sm">
                  {specialty}
                </div>
              ))}
            </div>
          </div>

          {/* Achievements */}
          <div className="mb-6">
            <div className="space-y-3">
              {achievements.map((achievement, index) => (
                <div key={index}
                     className="bg-white bg-opacity-10 rounded-lg p-3 
                              flex items-center space-x-3">
                  <span className="text-2xl">{achievement.icon}</span>
                  <div>
                    <div className="text-white font-bold">{achievement.name}</div>
                    <div className="text-white text-opacity-70 text-sm">
                      {achievement.description}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* $OOF Stats */}
          <div className="grid grid-cols-2 gap-4">
            <div className="bg-purple-600 bg-opacity-50 rounded-lg p-4">
              <div className="text-white text-opacity-70 text-sm">$OOF Balance</div>
              <div className="text-white text-xl font-bold">{oofBalance}</div>
            </div>
            <div className="bg-purple-600 bg-opacity-50 rounded-lg p-4">
              <div className="text-white text-opacity-70 text-sm">Staking Rewards</div>
              <div className="text-white text-xl font-bold">{stakingRewards}</div>
            </div>
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-purple-50 to-purple-100 p-8">
      <div className="max-w-7xl mx-auto">
        {/* Header with SOL Price */}
        <div className="flex justify-between items-center mb-8">
          <h1 className="text-4xl font-bold text-purple-900">
            OOF Legends
          </h1>
          <div className="bg-white rounded-lg px-4 py-2 shadow">
            <span className="text-gray-600">SOL:</span>
            <span className="font-bold ml-2">${marketData.solPrice}</span>
          </div>
        </div>

        {/* Wallet Connection */}
        {!walletConnected && (
          <div className="bg-white rounded-xl shadow-lg p-6 mb-8 
                         flex justify-between items-center">
            <div>
              <h2 className="text-xl font-bold text-purple-900">
                Connect your wallet to trade
              </h2>
              <p className="text-purple-600">
                Buy, sell, and stake $OOF tokens
              </p>
            </div>
            <button
              onClick={() => setWalletConnected(true)}
              className="bg-purple-600 text-white px-6 py-3 rounded-lg
                       hover:bg-purple-700 transition-colors flex items-center
                       space-x-2"
            >
              <Wallet size={20} />
              <span>Connect Wallet</span>
            </button>
          </div>
        )}

        {/* Trading Hub */}
        <div className="mb-8">
          <TradingHub />
        </div>

        {/* Profile Grid */}
        <div className="grid grid-cols-2 gap-8">
          {/* Add mapped profile cards here */}
        </div>
      </div>
    </div>
  );
};

export default OOFPlatform;